geom_polygon(data = Country, aes(x = country, y = number)) +
geom_point(data = Country, aes(x = country, y = number), color = "#e60000") +
scale_fill_manual(values = c("#CCCCCC","#e60000")) +
theme(text = element_text(family = "Gill Sans", color = "#FFFFFF")
,panel.background = element_rect(fill = "#444444")
,plot.background = element_rect(fill = "#444444")
,panel.grid = element_blank()
,plot.title = element_text(size = 30)
,plot.subtitle = element_text(size = 10)
,axis.text = element_blank()
,axis.title = element_blank()
,axis.ticks = element_blank()
,legend.position = "none"
)
ggplot() +
geom_polygon(data = Country, aes(x = country, y = number)) +
geom_point(data = Country, aes(x = country, y = number), color = "#e60000") +
scale_fill_manual(values = c("#CCCCCC","#e60000")) +
theme(text = element_text(family = "Gill Sans", color = "#FFFFFF")
,panel.background = element_rect(fill = "#444444")
,plot.background = element_rect(fill = "#444444")
,panel.grid = element_blank()
,plot.title = element_text(size = 30)
,plot.subtitle = element_text(size = 10)
,axis.text = element_blank()
,axis.title = element_blank()
,axis.ticks = element_blank()
,legend.position = "none"
)
Country = country %>% group_by(., country) %>% summarise(number = length(country), ratio = number/nrow(country)) %>% arrange(., desc(number)) %>% head(15)
Country = country %>% group_by(., country) %>% summarise(number = length(country), ratio = length(country)/nrow(country)) %>% arrange(., desc(number)) %>% head(15)
c = data %>% select(., country = 162)
Country = c %>% group_by(., country) %>% summarise(number = length(country), ratio = length(country)/nrow(c)) %>% arrange(., desc(number)) %>% head(15)
ggplot() +
geom_polygon(data = Country, aes(x = country, y = number)) +
geom_point(data = Country, aes(x = country, y = number), color = "#e60000") +
scale_fill_manual(values = c("#CCCCCC","#e60000")) +
theme(text = element_text(family = "Gill Sans", color = "#FFFFFF")
,panel.background = element_rect(fill = "#444444")
,plot.background = element_rect(fill = "#444444")
,panel.grid = element_blank()
,plot.title = element_text(size = 30)
,plot.subtitle = element_text(size = 10)
,axis.text = element_blank()
,axis.title = element_blank()
,axis.ticks = element_blank()
,legend.position = "none"
)
ggplot() +
geom_polygon(data = Country, aes(x = number, y = ratio)) +
geom_point(data = Country, aes(x = number, y = ratio), color = "#e60000") +
scale_fill_manual(values = c("#CCCCCC","#e60000")) +
theme(text = element_text(family = "Gill Sans", color = "#FFFFFF")
,panel.background = element_rect(fill = "#444444")
,plot.background = element_rect(fill = "#444444")
,panel.grid = element_blank()
,plot.title = element_text(size = 30)
,plot.subtitle = element_text(size = 10)
,axis.text = element_blank()
,axis.title = element_blank()
,axis.ticks = element_blank()
,legend.position = "none"
)
,subtitle = "source: INSEAD, https://www.insead.edu/news/2017-global-talent-competitiveness-index-davos") +
theme(text = element_text(family = "Gill Sans", color = "#FFFFFF")
,subtitle = "source: INSEAD, https://www.insead.edu/news/2017-global-talent-competitiveness-index-davos") +
theme(text = element_text(family = "Gill Sans", color = "#FFFFFF")
ggplot() +
geom_polygon(data = Country, aes(x = number, y = ratio)) +
geom_point(data = Country, aes(x = number, y = ratio), color = "#e60000") +
scale_fill_manual(values = c("#CCCCCC","#e60000")) +
labs(title = 'Countries with highest "talent competitiveness"',
subtitle = "source: INSEAD, https://www.insead.edu/news/2017-global-talent-competitiveness-index-davos")
ggplot() +
geom_polygon(data = Country, aes(x = number, y = ratio)) +
geom_point(data = Country, aes(x = number, y = ratio), color = "#e60000") +
scale_fill_manual(values = c("#CCCCCC","#e60000")) +
labs(title = 'Countries with highest "talent competitiveness"',
subtitle = "source: INSEAD, https://www.insead.edu/news/2017-global-talent-competitiveness-index-davos")
ggplot() +
geom_polygon(data = Country, aes(x = number, y = ratio)) +
geom_point(data = Country, aes(x = number, y = ratio), color = "#e60000") +
scale_fill_manual(values = c("#CCCCCC","#e60000")) +
theme(text = element_text(family = "Gill Sans", color = "#FFFFFF")
,panel.background = element_rect(fill = "#444444")
,plot.background = element_rect(fill = "#444444")
,panel.grid = element_blank()
,plot.title = element_text(size = 30)
,plot.subtitle = element_text(size = 10)
,axis.text = element_blank()
,axis.title = element_blank()
,axis.ticks = element_blank()
,legend.position = "none"
)
WorldData <- map_data('world')
WorldData %>% filter(region != "Antarctica") -> WorldData
WorldData <- fortify(WorldData)
df <- data.frame(region=c('Hungary','Lithuania','Argentina'),
value=c(4,10,11),
stringsAsFactors=FALSE)
p <- ggplot()
p <- p + geom_map(data=WorldData, map=WorldData,
aes(x=long, y=lat, group=group, map_id=region),
fill="white", colour="#7f7f7f", size=0.5)
p <- p + geom_map(data=df, map=WorldData,
aes(fill=value, map_id=region),
colour="#7f7f7f", size=0.5)
p <- p + coord_map("rectangular", lat0=0, xlim=c(-180,180), ylim=c(-60, 90))
p <- p + scale_fill_continuous(low="thistle2", high="darkred",
guide="colorbar")
p <- p + scale_y_continuous(breaks=c())
p <- p + scale_x_continuous(breaks=c())
p <- p + labs(fill="legend", title="Title", x="", y="")
p <- p + theme_bw()
p <- p + theme(panel.border = element_blank())
p
WorldData
p <- p + geom_map(data=WorldData, map=WorldData,
aes(x=long, y=lat, group=group, map_id=region),
fill="white", colour="#7f7f7f", size=0.5)
ggplot() +
geom_map(data=WorldData, map=WorldData,
aes(x=long, y=lat, group=group, map_id=region),
fill="white", colour="#7f7f7f", size=0.5)+
geom_point(data = Country, aes(x = number, y = ratio), color = "#e60000") +
scale_fill_manual(values = c("#CCCCCC","#e60000")) +
theme(text = element_text(family = "Gill Sans", color = "#FFFFFF")
,panel.background = element_rect(fill = "#444444")
,plot.background = element_rect(fill = "#444444")
,panel.grid = element_blank()
,plot.title = element_text(size = 30)
,plot.subtitle = element_text(size = 10)
,axis.text = element_blank()
,axis.title = element_blank()
,axis.ticks = element_blank()
,legend.position = "none"
)
c = data %>% select(., country = 162)
Country = c %>% group_by(., country) %>% summarise(number = length(country)) %>% arrange(., desc(number)) %>% head(15)
ggplot() +
geom_map(data=WorldData, map=WorldData,
aes(x=long, y=lat, group=group, map_id=region),
fill="white", colour="#7f7f7f", size=0.5)+
geom_map(data=Country, map=WorldData,
aes(fill=number, map_id=region),
colour="#7f7f7f", size=0.5)+
coord_map("rectangular", lat0=0, xlim=c(-180,180), ylim=c(-60, 90))
ggplot() +
geom_map(data=WorldData, map=WorldData,
aes(x=long, y=lat, group=group, map_id=region),
fill="white", colour="#7f7f7f", size=0.5)+
geom_map(data=Country, map=WorldData,
aes(fill=number, map_id=region),
colour="#7f7f7f", size=0.5)+
coord_map("rectangular", lat0=0, xlim=c(-180,180), ylim=c(-60, 90))
WorldData
ggplot() +
geom_map(data=WorldData, map=WorldData,
aes(x=long, y=lat, group=group, map_id=region),
fill="white", colour="#7f7f7f", size=0.5)+
geom_map(data=Country, map=WorldData,
aes(fill=number, map_id=region),
colour="#7f7f7f", size=0.5)+
coord_map("rectangular", lat0=0, xlim=c(-180,180), ylim=c(-60, 90))
ggplot() +
geom_map(data=WorldData, map=WorldData,
aes(x=long, y=lat, group=group, map_id=region),
fill="white", colour="#7f7f7f", size=0.5)+
geom_map(data=Country, map=WorldData,
aes(fill=number, map_id=region),
colour="#7f7f7f", size=0.5)+
coord_map("rectangular", lat0=0, xlim=c(-180,180), ylim=c(-60, 90))
WorldData <- fortify(WorldData)
WorldData <- map_data('world')
WorldData %>% filter(region != "Antarctica") -> WorldData
WorldData <- fortify(WorldData)
Country$region = c$country
country$region
Country$region = c$country
Country$region = c %>% group_by(., country)
c %>% group_by(., country)
View(country)
View(Country)
Country$region = Country
Country
Country = c %>% group_by(., country) %>% summarise(number = length(country)) %>% arrange(., desc(number)) %>% head(15)
ggplot() +
geom_map(data=WorldData, map=WorldData,
aes(x=long, y=lat, group=group, map_id=region),
fill="white", colour="#7f7f7f", size=0.5)+
geom_map(data=Country, map=WorldData,
aes(fill=number, map_id=country),
colour="#7f7f7f", size=0.5)+
coord_map("rectangular", lat0=0, xlim=c(-180,180), ylim=c(-60, 90))
ggplot() +
geom_map(data=WorldData, map=WorldData,
aes(x=long, y=lat, group=group, map_id=region),
fill="white", colour="#7f7f7f", size=0.5)+
geom_map(data=Country, map=WorldData,
aes(fill=number, map_id=country),
colour="#7f7f7f", size=0.5)+
coord_map("rectangular", lat0=0, xlim=c(-180,180), ylim=c(-60, 90))+
scale_fill_continuous(low="thistle2", high="darkred",
guide="colorbar")
ggplot() +
geom_map(data=WorldData, map=WorldData,
aes(x=long, y=lat, group=group, map_id=region),
fill="white", colour="#7f7f7f", size=0.5)+
geom_map(data=Country, map=WorldData,
aes(fill=number, map_id=country),
colour="#7f7f7f", size=0.5)+
coord_map("rectangular", lat0=0, xlim=c(-180,180), ylim=c(-60, 90))+
scale_fill_continuous(low="thistle2", high="darkred",
guide="colorbar")+
scale_y_continuous(breaks=c())+
scale_x_continuous(breaks=c())+
labs(fill="legend", title="Title", x="", y="")+
theme_bw()+
theme(panel.border = element_blank())
ggplot() +
geom_map(data=WorldData, map=WorldData,
aes(x=long, y=lat, group=group, map_id=region),
fill="white", colour="#7f7f7f", size=0.5)+
geom_map(data=Country, map=WorldData,
aes(fill=number, map_id=country),
colour="#7f7f7f", size=0.5)+
coord_map("rectangular", lat0=0, xlim=c(-180,180), ylim=c(-60, 90))+
scale_fill_continuous(low="thistle2", high="darkblue",
guide="colorbar")+
scale_y_continuous(breaks=c())+
scale_x_continuous(breaks=c())+
labs(fill="legend", title="Title", x="", y="")+
theme_bw()+
theme(panel.border = element_blank())
Country
ggplot() +
geom_map(data=WorldData, map=WorldData,
aes(x=long, y=lat, group=group, map_id=region),
fill="white", colour="#7f7f7f", size=0.5)+
geom_map(data=Country, map=WorldData,
aes(fill=number, map_id=country),
colour="#7f7f7f", size=0.5)+
coord_map("rectangular", lat0=0, xlim=c(-180,180), ylim=c(0, 1650))+
scale_fill_continuous(low="thistle2", high="darkblue",
guide="colorbar")+
scale_y_continuous(breaks=c())+
scale_x_continuous(breaks=c())+
labs(fill="legend", title="Title", x="", y="")+
theme_bw()+
theme(panel.border = element_blank())
-60, 90
ggplot() +
geom_map(data=WorldData, map=WorldData,
aes(x=long, y=lat, group=group, map_id=region),
fill="white", colour="#7f7f7f", size=0.5)+
geom_map(data=Country, map=WorldData,
aes(fill=number, map_id=country),
colour="#7f7f7f", size=0.5)+
coord_map("rectangular", lat0=0, xlim=c(-180,180), ylim=c(-60, 90))+
scale_fill_continuous(low="thistle2", high="darkblue",
guide="colorbar")+
scale_y_continuous(breaks=c())+
scale_x_continuous(breaks=c())+
labs(fill="legend", title="Title", x="", y="")+
theme_bw()+
theme(panel.border = element_blank())
ggplot() +
geom_map(data=WorldData, map=WorldData,
aes(x=long, y=lat, group=group, map_id=region),
fill="white", colour="#7f7f7f", size=0.5)+
geom_map(data=Country, map=WorldData,
aes(fill=number, map_id=country),
colour="#7f7f7f", size=0.5)+
coord_map("rectangular", lat0=0, xlim=c(-180,180), ylim=c(-60, 90))+
scale_fill_continuous(low="#132B43", high="#56B1F7",
guide="colorbar")+
scale_y_continuous(breaks=c())+
scale_x_continuous(breaks=c())+
labs(fill="legend", title="Title", x="", y="")+
theme_bw()+
theme(panel.border = element_blank())
runApp()
runApp()
Country %>%
ggplot(aes(x = country, y = number, fill = industry)) +
geom_bar(stat="identity", alpha=0.5, width = 0.5) +
ylim(0,0.3) +
theme_minimal() +
theme(
panel.grid = element_blank(),
text = element_text(size=15),
plot.title = element_text(hjust = 0.5)
)+
scale_x_discrete(labels = function(x) str_wrap(x, width = 10))
Country
Country %>%
ggplot(aes(x = country, y = number, fill = industry)) +
geom_bar(stat="identity", alpha=0.5, width = 0.5) +
ylim(0,1650) +
theme_minimal() +
theme(
panel.grid = element_blank(),
text = element_text(size=15),
plot.title = element_text(hjust = 0.5)
)+
scale_x_discrete(labels = function(x) str_wrap(x, width = 10))
Country %>%
ggplot(aes(x = country, y = number, fill = country)) +
geom_bar(stat="identity", alpha=0.5, width = 0.5) +
ylim(0,1650) +
theme_minimal() +
theme(
panel.grid = element_blank(),
text = element_text(size=15),
plot.title = element_text(hjust = 0.5)
)+
scale_x_discrete(labels = function(x) str_wrap(x, width = 10))
Country %>%
arrange(number) %>%
mutate(country=factor(country,country)) %>%
ggplot(aes(x = country, y = number, fill = country)) +
geom_bar(stat="identity", alpha=0.5, width = 0.5) +
ylim(0,1650) +
theme_minimal() +
theme(
panel.grid = element_blank(),
text = element_text(size=15),
plot.title = element_text(hjust = 0.5)
)+
scale_x_discrete(labels = function(x) str_wrap(x, width = 10))
Country %>%
arrange(number) %>%
mutate(country=factor(country,country)) %>%
ggplot(aes(x = country, y = number, fill = country)) +
geom_bar(stat="identity", alpha=0.5, width = 0.5) +
ylim(0,1650) +
theme_minimal() +
theme(
panel.grid = element_blank(),
text = element_text(size=15),
plot.title = element_text(hjust = 0.5)
)+
scale_x_discrete(labels = function(x) str_wrap(x, width = 10))
runApp()
shiny::runApp('C:/Users/Leo/Desktop/shinyApps/leaflet_demo')
runApp('C:/Users/Leo/Desktop/shinyApps/shinyDashBoard')
runApp()
runApp()
purpose = data %>% select(., "Eduction" = 26, "Data Analyst" = 27, "DevOps/System administration/Writing automation scripts" = 28,
"Software testing / Writing automated tests" = 29, "Software prototyping" = 30
, "Web development" = 31, "Machine learning" = 32,
"Mobile development" = 33, "Desktop development" = 34, "Computer graphics" = 35,
"Network programming" = 36, "Game development" = 37,
"Multimedia applications development" = 38, "Embedded development" = 39,
"amming of web parsers / scrapers / crawlers" = 40, "other" = 41)
purpose
runApp()
p %>%
arrange(pnumber) %>%
mutate(pnames=factor(pnames,pnames)) %>%
ggplot(aes(x = pnames, y = pnumber, fill = pnames)) +
geom_bar(stat="identity", alpha=0.2, width = 0.5) +
ylim(0,0.3) +
theme_minimal() +
theme(
panel.grid = element_blank(),
text = element_text(size=15),
plot.title = element_text(hjust = 0.5)
)
purpose = data %>% select(., "Eduction" = 26, "Data Analyst" = 27, "DevOps/System administration/Writing automation scripts" = 28,
"Software testing / Writing automated tests" = 29, "Software prototyping" = 30
, "Web development" = 31, "Machine learning" = 32,
"Mobile development" = 33, "Desktop development" = 34, "Computer graphics" = 35,
"Network programming" = 36, "Game development" = 37,
"Multimedia applications development" = 38, "Embedded development" = 39,
"amming of web parsers / scrapers / crawlers" = 40, "other" = 41)
pratio = rep(0,16)
pratio[1] = purpose %>% summarise(sum(!is.na(purpose$Eduction))/length(purpose$Eduction))
pratio[2] = purpose %>% summarise(sum(!is.na(purpose$"Data Analyst"))/length(purpose$"Data Analyst"))
pratio[3] = purpose %>% summarise(sum(!is.na(purpose$"DevOps/System administration/Writing automation scripts"))/
length(purpose$"DevOps/System administration/Writing automation scripts"))
pratio[4] = purpose %>% summarise(sum(!is.na(purpose$"Software testing / Writing automated tests"))/length(purpose$"Software testing / Writing automated tests"))
pratio[5] = purpose %>% summarise(sum(!is.na(purpose$"Software prototyping"))/length(purpose$"Software prototyping"))
pratio[6] = purpose %>% summarise(sum(!is.na(purpose$"Web development"))/length(purpose$"Web development"))
pratio[7] = purpose %>% summarise(sum(!is.na(purpose$"Machine learning"))/length(purpose$"Machine learning"))
pratio[8] = purpose %>% summarise(sum(!is.na(purpose$"Mobile development"))/length(purpose$"Mobile development"))
pratio[9] = purpose %>% summarise(sum(!is.na(purpose$"Desktop development"))/length(purpose$"Desktop development"))
pratio[10] = purpose %>% summarise(sum(!is.na(purpose$"Computer graphics"))/length(purpose$"Computer graphics"))
pratio[11] = purpose %>% summarise(sum(!is.na(purpose$"Network programming"))/length(purpose$"Network programming"))
pratio[12] = purpose %>% summarise(sum(!is.na(purpose$"Game development"))/length(purpose$"Game development"))
pratio[13] = purpose %>% summarise(sum(!is.na(purpose$"Multimedia applications development"))/length(purpose$"Multimedia applications development"))
pratio[14] = purpose %>% summarise(sum(!is.na(purpose$"Embedded development"))/
length(purpose$"Embedded development"))
pratio[15] = purpose %>% summarise(sum(!is.na(purpose$"amming of web parsers / scrapers / crawlers"))
/length(purpose$"amming of web parsers / scrapers / crawlers"))
pratio[16] = purpose %>% summarise(sum(!is.na(purpose$"other"))/length(purpose$"other"))
pnumber = rep(0,16)
pnumber[1] = purpose %>% summarise(sum(!is.na(purpose$Eduction)))
pnumber[2] = purpose %>% summarise(sum(!is.na(purpose$"Data Analyst")))
pnumber[3] = purpose %>% summarise(sum(!is.na(purpose$"DevOps/System administration/Writing automation scripts")))
pnumber[4] = purpose %>% summarise(sum(!is.na(purpose$"Software testing / Writing automated tests")))
pnumber[5] = purpose %>% summarise(sum(!is.na(purpose$"Software prototyping")))
pnumber[6] = purpose %>% summarise(sum(!is.na(purpose$"Web development")))
pnumber[7] = purpose %>% summarise(sum(!is.na(purpose$"Machine learning")))
pnumber[8] = purpose %>% summarise(sum(!is.na(purpose$"Mobile development")))
pnumber[9] = purpose %>% summarise(sum(!is.na(purpose$"Desktop development")))
pnumber[10] = purpose %>% summarise(sum(!is.na(purpose$"Computer graphics")))
pnumber[11] = purpose %>% summarise(sum(!is.na(purpose$"Network programming")))
pnumber[12] = purpose %>% summarise(sum(!is.na(purpose$"Game development")))
pnumber[13] = purpose %>% summarise(sum(!is.na(purpose$"Multimedia applications development")))
pnumber[14] = purpose %>% summarise(sum(!is.na(purpose$"Embedded development")))
pnumber[15] = purpose %>% summarise(sum(!is.na(purpose$"amming of web parsers / scrapers / crawlers")))
pnumber[16] = purpose %>% summarise(sum(!is.na(purpose$"other")))
pnames = colnames(purpose)
colnames(purpose)
p = data.frame(pnames)
p$pratio = as.numeric(pratio)
p$pnumber = as.numeric(pnumber)
p %>%
arrange(pnumber) %>%
mutate(pnames=factor(pnames,pnames)) %>%
ggplot(aes(x = pnames, y = pnumber, fill = pnames)) +
geom_bar(stat="identity", alpha=0.2, width = 0.5) +
ylim(0,0.3) +
theme_minimal() +
theme(
panel.grid = element_blank(),
text = element_text(size=15),
plot.title = element_text(hjust = 0.5)
)
p$pnumber
p %>%
arrange(pnumber) %>%
mutate(pnames=factor(pnames,pnames)) %>%
ggplot(aes(x = pnames, y = pnumber, fill = pnames)) +
geom_bar(stat="identity", alpha=0.2, width = 0.5)
p %>%
arrange(pnumber) %>%
mutate(pnames=factor(pnames,pnames)) %>%
ggplot(aes(x = pnames, y = pnumber, fill = pnames)) +
geom_bar(stat="identity", alpha=0.2, width = 0.5) +
theme_minimal() +
theme(
panel.grid = element_blank(),
text = element_text(size=15),
plot.title = element_text(hjust = 0.5)
)
runApp()
age$number
runApp()
division %>%
ggplot(aes(x = names, y = ratio, fill = names))+
geom_point( aes(color=as.factor(names)), alpha=0.8, size=1.3) +
scale_color_manual(values = rep(c("grey", "skyblue"), 22 )) +
# custom X axis:
scale_y_continuous(expand = c(0, 0) ) +     # remove space between plot area and x axis
# Custom the theme:
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
division %>%
ggplot(aes(x = names, y = ratio, fill = names))+
geom_point( aes(color=as.factor(names)), alpha=0.8, size=1.3) +
scale_color_manual(values = rep(c("grey", "skyblue"), 22 ))
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
word
work
runApp()
country
Country
runApp()
runApp()
runApp()
c %>% group_by(., country) %>% summarise(number = length(unique(country)))
runApp()
runApp()
Country
runApp()
runApp()
WorldData$lat
max(WorldData$lat)
runApp()
Country
runApp()
runApp()
runApp()
WorldData$long
runApp()
Country
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
library(maps)
runApp()
runApp()
runApp()
